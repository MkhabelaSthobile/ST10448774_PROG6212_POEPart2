@model IEnumerable<CMCS_App.Models.Claim>
@{
    ViewData["Title"] = "Pending Claims Verification";
}

<div class="container">
    <div class="row mb-4">
        <div class="col">
            <h2>Pending Claims Verification</h2>
            <p class="lead">Verify and approve claims submitted by lecturers</p>
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Statistics -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card text-white bg-warning">
                <div class="card-body">
                    <h6 class="card-title">Pending Review</h6>
                    <h3 class="card-text">@Model.Count(c => c.Status == "Submitted" || c.Status == "Pending")</h3>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-info">
                <div class="card-body">
                    <h6 class="card-title">Approved by Me</h6>
                    <h3 class="card-text">@Model.Count(c => c.Status == "Approved by Coordinator")</h3>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-danger">
                <div class="card-body">
                    <h6 class="card-title">Rejected by Me</h6>
                    <h3 class="card-text">@Model.Count(c => c.Status.Contains("Rejected by Coordinator"))</h3>
                </div>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-header">
            <h5 class="card-title mb-0">
                <i class="fas fa-clipboard-check me-2"></i>Claims Requiring Verification
            </h5>
        </div>
        <div class="card-body">
            @if (Model.Any(c => c.Status == "Submitted" || c.Status == "Pending"))
            {
                <div class="row">
                    @foreach (var claim in Model.Where(c => c.Status == "Submitted" || c.Status == "Pending"))
                    {
                        <div class="col-md-6 mb-4">
                            <div class="card h-100 border-warning">
                                <div class="card-header bg-warning text-dark">
                                    <h6 class="card-title mb-0">
                                        Claim #@claim.ClaimID - @claim.Month
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-6">
                                            <strong>Lecturer:</strong><br>
                                            <span class="text-primary">@claim.Lecturer?.FullName</span>
                                        </div>
                                        <div class="col-6">
                                            <strong>Module:</strong><br>
                                            <span>@claim.Lecturer?.ModuleName</span>
                                        </div>
                                    </div>
                                    <hr>
                                    <div class="row">
                                        <div class="col-4">
                                            <strong>Hours:</strong><br>
                                            <span class="h5">@claim.HoursWorked</span>
                                        </div>
                                        <div class="col-4">
                                            <strong>Rate:</strong><br>
                                            <span>R @claim.HourlyRate.ToString("N2")</span>
                                        </div>
                                        <div class="col-4">
                                            <strong>Total:</strong><br>
                                            <span class="h5 text-success">R @claim.TotalAmount.ToString("N2")</span>
                                        </div>
                                    </div>
                                    <hr>
                                    <div class="row">
                                        <div class="col-12">
                                            <strong>Submitted:</strong> @claim.SubmissionDate.ToString("dd MMM yyyy HH:mm")
                                        </div>
                                    </div>

                                    @if (!string.IsNullOrEmpty(claim.SupportingDocument))
                                    {
                                        <div class="mt-2">
                                            <a href="@Url.Action("DownloadDocument", "ProgrammeCoordinator", new { id = claim.ClaimID })"
                                               class="btn btn-outline-primary btn-sm">
                                                <i class="fas fa-download me-1"></i>View Document
                                            </a>
                                        </div>
                                    }

                                    <div class="mt-3">
                                        <form method="post" action="@Url.Action("Approve", "ProgrammeCoordinator", new { id = claim.ClaimID })" class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-success btn-sm">
                                                <i class="fas fa-check me-1"></i>Approve
                                            </button>
                                        </form>

                                        <button type="button" class="btn btn-danger btn-sm"
                                                data-bs-toggle="modal" data-bs-target="#rejectModal@claim.ClaimID">
                                            <i class="fas fa-times me-1"></i>Reject
                                        </button>

                                        <a href="@Url.Action("Details", "ProgrammeCoordinator", new { id = claim.ClaimID })"
                                           class="btn btn-info btn-sm">
                                            <i class="fas fa-info-circle me-1"></i>Details
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Reject Modal -->
                        <div class="modal fade" id="rejectModal@claim.ClaimID" tabindex="-1">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title">Reject Claim #@claim.ClaimID</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                    </div>
                                    <form method="post" action="@Url.Action("Reject", "ProgrammeCoordinator", new { id = claim.ClaimID })">
                                        @Html.AntiForgeryToken()
                                        <div class="modal-body">
                                            <p>You are about to reject the claim from <strong>@claim.Lecturer?.FullName</strong> for <strong>@claim.Month</strong>.</p>
                                            <div class="mb-3">
                                                <label for="reason@claim.ClaimID" class="form-label">Reason for Rejection:</label>
                                                <textarea name="reason" class="form-control" id="reason@claim.ClaimID"
                                                  rows="3" placeholder="Please provide a reason for rejection..." required></textarea>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                            <button type="submit" class="btn btn-danger">Reject Claim</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-check-circle fa-4x text-success mb-3"></i>
                    <h4 class="text-success">All Caught Up!</h4>
                    <p class="text-muted">There are no pending claims requiring your verification at the moment.</p>
                </div>
            }

            <!-- Previously Processed Claims -->
            @if (Model.Any(c => c.Status != "Submitted" && c.Status != "Pending"))
            {
                <hr>
                <h6 class="mt-4 mb-3">Previously Processed Claims</h6>
                <div class="table-responsive">
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>Claim ID</th>
                                <th>Lecturer</th>
                                <th>Month</th>
                                <th>Amount</th>
                                <th>Status</th>
                                <th>Processed Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var claim in Model.Where(c => c.Status != "Submitted" && c.Status != "Pending"))
                            {
                                <tr>
                                    <td>#@claim.ClaimID</td>
                                    <td>@claim.Lecturer?.FullName</td>
                                    <td>@claim.Month</td>
                                    <td>R @claim.TotalAmount.ToString("N2")</td>
                                    <td><span class="badge @GetStatusBadgeClass(claim.Status)">@claim.Status</span></td>
                                    <td>@claim.SubmissionDate.ToString("dd MMM yyyy")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

@functions {
    public string GetStatusBadgeClass(string status)
    {
        return status.ToLower() switch
        {
            var s when s.Contains("approved by manager") => "bg-success",
            var s when s.Contains("approved by coordinator") => "bg-info",
            var s when s.Contains("rejected by coordinator") => "bg-danger",
            var s when s.Contains("rejected by manager") => "bg-dark",
            var s when s.Contains("submitted") => "bg-primary",
            _ => "bg-warning"
        };
    }
}